# Сложность алгоритма - как долго выполняется задача
# 1 шаг = 1 итерация при отсутствии циклов
# если есть 1 цикл из n-шагов:
# сложность алг-ма = О(n), алг-м линейный
# n >> 1 "много больше" 
# алгоритм из n шагов выполняется за константное время
# алгоритм зависит от len(L), от кол-ва входов в цикл
# Если вложенный цикл: 
# for...(n) : for... (n)  - n раз по n секунд = n^2
# Стараются прийти к линейному алгоритму от п^2 к О(п)

L = [10,7,9,2,8,7,5,7,10,8]
for i in range(len(L)):
    if L[i] == 8:
        print(1)
        break
# долго
# упорядоченный список - его эл-ты располагаются по заранее опр. правилу
# по возрастанию, убыванию, неубыванию, невозрастанию
# неубывание 111122344 >= невозрастание: 554441
# алгоритмы-сортировки для упорядочивания